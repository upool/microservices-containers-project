server.port=8080
spring.application.name=bookstore-pedidos

instance.id= ${random.value}

#spring admin configuration
spring.boot.admin.client.url=http://localhost:8090
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.boot.admin.client.instance.service-url=http://localhost:8080


#spring cloud eureka configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=1
eureka.instance.lease-expiration-duration-in-seconds=2
eureka.instance.metadata-map.instanceId=${instance.id}

# RabbitMQ
queue.name=registro-pedido
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


# postgres database
spring.datasource.url=jdbc:postgresql://localhost:5432/pedidos
spring.datasource.username=pedidos
spring.datasource.password=postgres

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true